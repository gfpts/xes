<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	修改说明:
	1.修改<context:component-scan以确定要加载的controller,默认为com.**.controller
	2.修改class=ControllerClassNameHandlerMapping节点的pathPrefix以确定要生成的前缀
 -->
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
    default-autowire="byName"   >

	<!-- 开启支持@NumberFormat @DateTimeFormat @Valid标注 ,@DateTimeFormat用于bean 日期属性的格式化,请查看: http://static.springsource.org/spring/docs/3.0.2.RELEASE/spring-framework-reference/htmlsingle/spring-framework-reference.html#mvc-config-->
    <mvc:annotation-driven validator="validator"/>
    
    <mvc:resources location="/" mapping="/**" />
  

	<!-- 自动搜索@Controller标注的类 -->
	<context:component-scan base-package="com.**.controller"/>
	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<!-- 拦截器注册 -->
		<property name="interceptors">
			<list>
				<bean class="com.up72.springmvc.interceptor.SharedRenderVariableInterceptor"/>
			</list>
		</property>
	</bean>
	
	<!-- file upload start -->
	<bean id="multipartResolver"
           class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
           <!-- 设置上传文件大小的参数 40M -->
        <property name="maxUploadSize" value="41943040"/>
    </bean>
    <!-- file upload end -->

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
    
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
      <property name="templateLoaderPath" value="/template/"/>
      <property name="defaultEncoding" value="UTF-8" />
      
      <property name="freemarkerSettings">
   		 <props>
   		 <prop key="template_update_delay">10</prop>
     	 <prop key="classic_compatible">true</prop>
     	 <prop key="default_encoding">UTF-8</prop>
         <prop key="locale">zh_CN</prop>
         <!-- <prop key="auto_import">"/lib/function.ftl" as fn</prop> -->
         <prop key="number_format">0.######</prop>  
    	</props>
  	</property>
  		
    	<property name="freemarkerVariables">
	        <map>
	          <entry key="xml_escape" value-ref="fmXmlEscape"/>
	          <entry key="block" value-ref="fmBlock"/>
	          <entry key="override" value-ref="fmOverride"/>
	          <entry key="extends" value-ref="fmExtends"/>
	        </map>
   		 </property>
      <!--可以增加其他freemarker的配置，详情请参阅FreeMarkerConfigurerAPI-->
    </bean>
    
    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
    <bean id="fmBlock" class="com.up72.framework.freemarker.directive.BlockDirective"/>
    <bean id="fmOverride" class="com.up72.framework.freemarker.directive.OverrideDirective"/>
    <bean id="fmExtends" class="com.up72.framework.freemarker.directive.ExtendsDirective"/>


    <!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    	<property name="ignoreAcceptHeader" value="true"/>
		<property name="defaultContentType" value="text/html"/>
		
    	<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="mediaTypes">
			<map>
				<!-- <entry key="html" value="text/html" /> -->  
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="false"/>
		<property name="viewResolvers">
			<list>
				 <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
				 	<property name="order" value="1" /> 
	                <property name="cache" value="false"/>
	                <property name="prefix" value=""/>
	                <property name="suffix" value=".ftl"/>
	                <property name="exposeSpringMacroHelpers" value="true"/>
	                <property name="contentType" value="text/html;charset=utf-8" />
					<!-- <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView">
					</property> -->
               	 </bean>
			
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" /> 
			    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			    	<property name="order" value="2" /> 
			        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
			        <property name="prefix" value="/pages"/>
			        <property name="suffix" value=".jsp"/>
			    </bean>
			</list>
		</property>
		
		<property name="defaultViews">
			<list>
				<!-- for application/json -->
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
				<!-- for application/xml -->
				
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView" >
					<property name="marshaller">
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller"/>
					</property>
				</bean>
			</list>
		</property>
    </bean>
    
    <!-- Mapping exception to the handler view -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
            </props>
        </property>
    </bean>
            
</beans>