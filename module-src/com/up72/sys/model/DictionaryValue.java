package com.up72.sys.model;

import javax.persistence.Column;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;

import com.up72.framework.util.holder.ApplicationContextHolder;
import com.up72.sys.service.DictionaryManager;
import com.up72.sys.service.DictionaryValueManager;

/**
 * DictionaryValue generated by MyEclipse - Hibernate Tools
 */

public class DictionaryValue implements java.io.Serializable {

	// Fields
	private Long id;
	private Long dictionaryId;
	private String value;
	private String description;
	private String code;
	private Long sortId;
	private Long parentId;

	// Constructors

	/** default constructor */
	public DictionaryValue() {
	}

	/** minimal constructor */
	public DictionaryValue(Long id) {
		this.id = id;
	}

	/** full constructor */
	public DictionaryValue(Long id, String value,
			String description, String code, Integer sort, Integer parent) {
		this.id = id;
		this.value = value;
		this.description = description;
		this.code = code;
	}

	// Property accessors

	@Id @GeneratedValue(generator="custom-id")
	@GenericGenerator(name="custom-id", strategy = "increment")
	@Column(name = "ID", unique = true, nullable = false, insertable = true, updatable = true, length = 19)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}
	
	@Transient
	public Dictionary getDictionary() {
		DictionaryManager dictionaryManager = (DictionaryManager) ApplicationContextHolder
				.getBean("dictionaryManager");
		if (this.dictionaryId != null && this.dictionaryId != 0) {
			return dictionaryManager.getDictionary(this.dictionaryId);
		} else {
			return null;
		}
	}

	@Transient
	public void setDictionary(Dictionary dictionary) {
		if (dictionary != null) {
			this.dictionaryId = dictionary.getId();
		}
	}

	@Column(name = "VALUE", unique = false, nullable = false, insertable = true, updatable = true, length = 50)
	public String getValue() {
		return this.value;
	}

	public void setValue(String value) {
		this.value = value;
	}

	@Column(name = "CODE", unique = false, nullable = false, insertable = true, updatable = true, length = 50)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "PARENT_ID", unique = false, nullable = true, insertable = true, updatable = true, length = 19)
	public Long getParentId() {
		return this.parentId;
	}

	public void setParentId(Long parentId) {
		this.parentId = parentId;
	}

	@Column(name = "DICTIONARY_ID", unique = false, nullable = true, insertable = true, updatable = true, length = 19)
	public Long getDictionaryId() {
		return dictionaryId;
	}

	public void setDictionaryId(Long dictionaryId) {
		this.dictionaryId = dictionaryId;
	}

	@Transient
	public DictionaryValue getParent() {
		DictionaryValueManager dictionaryValueManager = (DictionaryValueManager) ApplicationContextHolder
				.getBean("dictionaryValueManager");
		if (this.parentId != null && this.parentId != 0) {
			return (DictionaryValue) dictionaryValueManager
					.getDictionaryValue(this.getParentId());
		} else {
			return null;
		}
	}
	
	@Column(name = "DESCRIPTION", unique = false, nullable = false, insertable = true, updatable = true, length = 500)
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "SORT_ID", unique = false, nullable = true, insertable = true, updatable = true, length = 19)
	public Long getSortId() {
		return sortId;
	}

	public void setSortId(Long sortId) {
		this.sortId = sortId;
	}

	public void setParent(DictionaryValue parent) {
		if (parent != null) {
			this.dictionaryId = parent.getId();
		}
	}

}